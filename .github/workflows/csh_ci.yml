name: CloudStaffHub CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10.9"]
    services:
      db:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ vars.DB_NAME }}
          POSTGRES_USER: ${{ vars.DB_USER }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
    - name: Install Dependencies
      run: |
        poetry install
    - name: Run Tests
      run: |
        cd src
        poetry run python manage.py test
      env:
        DB_NAME: ${{ vars.DB_NAME }}
        DB_USER: ${{ vars.DB_USER }}
        DB_PORT: ${{ vars.DB_PORT }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        SMTP_HOST: ${{ vars.SMTP_HOST }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
    - name: Run Bandit
      run: |
        poetry run bandit -c pyproject.toml -r .
    - name: Run Safety
      run: |
        poetry run safety check
      continue-on-error: true
    - name: Run Ruff
      run: |
        poetry run ruff src
